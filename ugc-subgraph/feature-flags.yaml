# Feature flags configuration for migration
feature_flags:
  # GraphQL migration flags
  graphql_reviews_read:
    enabled: false
    rollout_percentage: 0.0
    description: "Enable GraphQL for reading reviews"
    conditions: []
    user_whitelist: []
    user_blacklist: []
    
  graphql_reviews_write:
    enabled: false
    rollout_percentage: 0.0
    description: "Enable GraphQL for writing reviews"
    conditions: []
    user_whitelist: []
    user_blacklist: []
    
  rest_api_deprecation_warning:
    enabled: true
    rollout_percentage: 100.0
    description: "Show deprecation warnings for REST API usage"
    conditions: []
    user_whitelist: []
    user_blacklist: []
    
  # A/B testing flags
  ab_test_graphql_migration:
    enabled: false
    rollout_percentage: 0.0
    description: "A/B test for GraphQL migration effectiveness"
    conditions: []
    user_whitelist: []
    user_blacklist: []
    
  # Performance optimization flags
  enable_query_caching:
    enabled: true
    rollout_percentage: 100.0
    description: "Enable query result caching"
    conditions: []
    user_whitelist: []
    user_blacklist: []
    
  enable_dataloader_batching:
    enabled: true
    rollout_percentage: 100.0
    description: "Enable DataLoader batching for N+1 prevention"
    conditions: []
    user_whitelist: []
    user_blacklist: []
    
  # Safety and monitoring flags
  enable_circuit_breaker:
    enabled: true
    rollout_percentage: 100.0
    description: "Enable circuit breaker for external services"
    conditions: []
    user_whitelist: []
    user_blacklist: []
    
  enable_rate_limiting:
    enabled: true
    rollout_percentage: 100.0
    description: "Enable rate limiting for GraphQL queries"
    conditions: []
    user_whitelist: []
    user_blacklist: []

# A/B test configurations
ab_tests:
  graphql_migration_test:
    name: "GraphQL Migration Effectiveness"
    description: "Compare performance and user experience between REST and GraphQL"
    variants:
      control:
        name: "REST API"
        description: "Users continue using REST API"
        traffic_percentage: 50.0
      treatment:
        name: "GraphQL API"
        description: "Users are migrated to GraphQL API"
        traffic_percentage: 50.0
    success_metrics:
      - "response_time_improvement"
      - "error_rate_reduction"
      - "user_satisfaction"
    duration_days: 30
    
# Canary deployment configurations
canary_deployments:
  graphql_reviews_read:
    initial_percentage: 1.0
    promotion_steps: [1, 5, 10, 25, 50, 75, 100]
    step_duration_minutes: 60
    success_criteria:
      max_error_rate: 0.05
      max_response_time_p95: 500
      min_success_rate: 0.95
    rollback_criteria:
      max_error_rate: 0.1
      max_response_time_p95: 1000
      
  graphql_reviews_write:
    initial_percentage: 1.0
    promotion_steps: [1, 2, 5, 10, 25, 50, 75, 100]
    step_duration_minutes: 120
    success_criteria:
      max_error_rate: 0.02
      max_response_time_p95: 300
      min_success_rate: 0.98
    rollback_criteria:
      max_error_rate: 0.05
      max_response_time_p95: 800

# Migration phases
migration_phases:
  phase_1:
    name: "Read Operations Migration"
    description: "Migrate read-only operations to GraphQL"
    flags:
      - "graphql_reviews_read"
    target_completion_date: "2024-03-01"
    success_criteria:
      - "50% of read traffic on GraphQL"
      - "Error rate < 2%"
      - "Response time improvement > 10%"
      
  phase_2:
    name: "Write Operations Migration"
    description: "Migrate write operations to GraphQL"
    flags:
      - "graphql_reviews_write"
    target_completion_date: "2024-04-01"
    success_criteria:
      - "25% of write traffic on GraphQL"
      - "Error rate < 1%"
      - "Data consistency 100%"
      
  phase_3:
    name: "Full Migration"
    description: "Complete migration to GraphQL"
    flags:
      - "graphql_reviews_read"
      - "graphql_reviews_write"
    target_completion_date: "2024-06-01"
    success_criteria:
      - "90% of traffic on GraphQL"
      - "REST API deprecated"
      - "Performance targets met"

# Emergency procedures
emergency_procedures:
  high_error_rate:
    threshold: 0.1
    actions:
      - "disable_all_graphql_flags"
      - "send_alert_to_oncall"
      - "create_incident"
      
  performance_degradation:
    threshold_p95_ms: 1000
    actions:
      - "reduce_rollout_percentage"
      - "enable_circuit_breaker"
      - "send_performance_alert"
      
  data_inconsistency:
    threshold: 0.01
    actions:
      - "emergency_rollback"
      - "pause_migration"
      - "investigate_data_integrity"